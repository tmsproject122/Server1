name: Continuous Persistent VPS

on:
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-22.04
    timeout-minutes: 350
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      
    - name: Display startup info
      run: |
        echo "Creating hostname root@incre"
        echo "Creating username incre and pass Incre.com"
        
    - name: Set hostname
      run: |
        sudo hostnamectl set-hostname root@incre
        echo "127.0.0.1 root@incre" | sudo tee -a /etc/hosts
        
    - name: Set root password
      run: |
        echo "root:Incre.com" | sudo chpasswd
        
    - name: Create user 'incre' with password 'Incre.com'
      run: |
        if ! id -u incre >/dev/null 2>&1; then
          sudo useradd -m -s /bin/bash incre
          echo "incre:Incre.com" | sudo chpasswd
          sudo usermod -aG sudo incre
          echo "incre ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/incre
        fi
        
    - name: Install prerequisites
      run: |
        sudo apt update
        sudo apt install -y tmate curl unzip sudo net-tools neofetch
        
    - name: Install Tailscale
      run: |
        curl -fsSL https://tailscale.com/install.sh | sh
        
    - name: Restore backup files
      run: |
        if [ -f ./backup/backup.zip ]; then
          unzip -o ./backup/backup.zip -d /
        else
          echo "No backup found, starting fresh"
        fi
        
    - name: Restore Tailscale state
      run: |
        if [ -f /opt/vps-backup/data/tailscaled.state ]; then
          sudo mkdir -p /var/lib/tailscale
          sudo cp /opt/vps-backup/data/tailscaled.state /var/lib/tailscale/tailscaled.state
          sudo chmod 600 /var/lib/tailscale/tailscaled.state
        fi
        
    - name: Start Tailscale
      run: |
        sudo tailscaled &
        sleep 8
        sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=root@incre || echo "Tailscale already up"
        
    - name: Start tmate and get connection info
      id: tmate
      run: |
        # Generate a unique session name
        SESSION_NAME="vps-$(date +%s)"
        
        # Start tmate and capture connection info
        tmate -S /tmp/tmate.sock new-session -d -s $SESSION_NAME
        tmate -S /tmp/tmate.sock wait tmate-ready
        
        # Get connection strings
        TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
        TMATE_WEB=$(tmate -S /tmp/tmate.sock display -p '#{tmate_web}')
        
        # Save to files and output
        echo "$TMATE_SSH" > /tmp/tmate_ssh
        echo "$TMATE_WEB" > /tmp/tmate_web
        
        echo "TMATE_SSH=$TMATE_SSH" >> $GITHUB_OUTPUT
        echo "TMATE_WEB=$TMATE_WEB" >> $GITHUB_OUTPUT
        
        echo "üîó tmate SSH: $TMATE_SSH"
        echo "üåê tmate Web: $TMATE_WEB"
        
        # Keep tmate alive with a simple command running in the session
        tmate -S /tmp/tmate.sock send-keys -t $SESSION_NAME "echo 'Tmate session active - VPS is ready for connections'" Enter
        
    - name: Show connection information
      run: |
        echo "=============================================="
        echo "üöÄ VPS READY FOR CONNECTIONS"
        echo "=============================================="
        echo "SSH Command: ${{ steps.tmate.outputs.TMATE_SSH }}"
        echo "Web Interface: ${{ steps.tmate.outputs.TMATE_WEB }}"
        echo ""
        echo "üîó Tailscale IP:"
        tailscale ip -4 || echo "Tailscale IP not found"
        echo "=============================================="
        
    - name: Setup background keep-alive
      run: |
        # Create a script to keep tmate session active
        cat > /tmp/keepalive.sh << 'EOF'
        #!/bin/bash
        while true; do
          # Send a simple command every minute to keep session active
          tmate -S /tmp/tmate.sock send-keys -t 0 "echo 'Session keep-alive: $(date)'" Enter
          sleep 60
        done
        EOF
        
        chmod +x /tmp/keepalive.sh
        nohup /tmp/keepalive.sh > /tmp/keepalive.log 2>&1 &
        
    - name: Backup VPS data and tailscale state
      run: |
        echo "Creating backup..."
        sudo mkdir -p /opt/vps-backup/data
        sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ 2>/dev/null || echo "No tailscale state found"
        sudo chown -R $USER:$USER /opt/vps-backup
        zip -r backup.zip /opt/vps-backup
        
    - name: Upload VPS backup artifact
      uses: actions/upload-artifact@v4
      with:
        name: vps-backup
        path: backup.zip
        
    - name: Keep workflow running with active tmate session
      run: |
        echo "‚úÖ VPS is running with active tmate session"
        echo "üíª Connect using: ${{ steps.tmate.outputs.TMATE_SSH }}"
        echo "üåê Or visit: ${{ steps.tmate.outputs.TMATE_WEB }}"
        echo ""
        echo "The workflow will now wait while keeping the session active..."
        echo "Press Ctrl+C in your tmate session to disconnect"
        echo "The VPS will automatically reconnect every 6 hours"
        
        # Wait indefinitely but allow background processes to run
        while true; do
          sleep 300
          echo "üîÑ VPS session still active - $(date)"
        done

# Username = incre
# Pass = Incre.com
